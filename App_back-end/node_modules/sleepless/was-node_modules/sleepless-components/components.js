
// Zach hates megafiles


(function() {


    // XXX use fetch()?
    function get_html( url, okay, fail ) {
        var xhr = new XMLHttpRequest();
        xhr.onload = function() {
            const html = ( xhr.status == 200 ) ? xhr.responseText : "";
            okay( html );
        };
        xhr.onerror = fail;
        xhr.open( "GET", url );
        xhr.send();
    };


    const component_store = {};


    async function load( name, path, okay ) {

        const dir = path + "/" + name;

        const html_path = dir + "/" + name + ".html";
        const code_path = dir + "/" + name + ".js";

        const m = await import( code_path );
        const code = m.default;

        get_html( html_path, html => {
            okay( { code, html } );
        } );
    }


    function inject( root ) {

        if( ! root )
            root = document;

        // find all the <component> elements
        const elements = root.querySelectorAll( "component" );
        for( let i = 0; i < elements.length; i++ ) {
            const element = elements[ i ];

            // use the name attr to find stuff in components dir
            const path = element.attr( "path" ) || "/components";
            const name = element.attr( "name" );

            load( name, path, loaded => {
                const { code, html } = loaded;
                const component = { element, code, html, name, path, };
                component_store[ name ] = component;
                component.code( component );      // call the module code
                console.log( "Component loaded: " + name );
            } );
        }

    }


    function find( name ) {
        return component_store[ name ];
    }


    globalThis.components = { inject, find, };


} )();



